log4j pour faire la journalisation
slf4j : framework qui permet de gerer la journalisation
exception non surveiller nous somme pas besoin d'enlever l'exeption
throws 
surveille si la classe herite de exception 
donc l'objet de dtos c'est que ne pas a chaque fois revenir aux entities pour indiquer qu'il faut ignorer ce champs la ou celle
c'est dans les bons pratiques on utilise les dtos pour stocker juste les champs qu'on veut cad on fait une verification
il va transfere les donner customer vers customerdto et pour realiser cette derniere on doit utiliser les mapper 
pour transferer les dtos ver entities et l'inverse 
content-type : postman pour indiquer que les des donnÃ©es sont ua format json
@Data => getters et setters

------------------------------------------------
Angular

npm install -g @angular/cli@13.3.3

9 ng g c customers
ng g c accounts

generer les routes app-routing.module

const routes: Routes = [
	// si je tape /customers c'est  CustomersComponent qui va s'afficher meme chose pour accounts
  { path:"customers",component: CustomersComponent},
  { path:"accounts",component: AccountsComponent}
];



au lieu de hfref je vais utliser router-link

ajouter un module https app.module.ts
 imports: [
    BrowserModule,
    AppRoutingModule,
    HttpClientModule,
    
  ],

//methode qui s'execute au demarrage le composant au momont du chargement cette methde s'execute
  ngOnInit(): void {
  }

*ngIf="customers" si customer contient une valeur

Access to XMLHttpRequest at 'http://localhost:8085/customers' from origin 'http://localhost:4200' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource
la probleme c'est que on veut envoyer par une application qui a un domaine x a une app d'un domaine y 
c'est pour cela corse bloque les requetes 
il faut autoriser
pour ce faire : 
serveur x envoie une requete avec option pour que le serveur y de l'autre domaine liste des autorisation
->get/tasks
<-tasks


aller vers controller -> @CrossOrigin("*") // j'autorise tous les requetes


generalement il faut faire les traitements dans service

ng g s services/customer

//any le resultat j'ai pas specifier de quelle type cad q

creer une interface customer.model.ts


http://localhost:8085/customers/_search?keyword=m

pour utiliser les formulaire y a une facons dans angular qui s'appelle reactif form


on peut declarer les constantes dans environnement.ts => variable d'envo
dans le cas de l'url ou soit le declarer dans service 


  this.customerService.saveCustomer(customer).subscribe(
      {
        next:data=>{
          alert("Customer has been successfully")
        }

si le customer est enregister next ==>
